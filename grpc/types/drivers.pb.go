// Code generated by protoc-gen-go. DO NOT EDIT.
// source: drivers.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_drivers_ac7416dc6971797b, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type DriverOptions struct {
	BoolOptions          map[string]bool         `protobuf:"bytes,1,rep,name=bool_options,json=boolOptions" json:"bool_options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	StringOptions        map[string]string       `protobuf:"bytes,2,rep,name=string_options,json=stringOptions" json:"string_options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	IntOptions           map[string]int64        `protobuf:"bytes,3,rep,name=int_options,json=intOptions" json:"int_options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	StringSliceOptions   map[string]*StringSlice `protobuf:"bytes,4,rep,name=string_slice_options,json=stringSliceOptions" json:"string_slice_options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *DriverOptions) Reset()         { *m = DriverOptions{} }
func (m *DriverOptions) String() string { return proto.CompactTextString(m) }
func (*DriverOptions) ProtoMessage()    {}
func (*DriverOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_drivers_ac7416dc6971797b, []int{1}
}
func (m *DriverOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DriverOptions.Unmarshal(m, b)
}
func (m *DriverOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DriverOptions.Marshal(b, m, deterministic)
}
func (dst *DriverOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DriverOptions.Merge(dst, src)
}
func (m *DriverOptions) XXX_Size() int {
	return xxx_messageInfo_DriverOptions.Size(m)
}
func (m *DriverOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DriverOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DriverOptions proto.InternalMessageInfo

func (m *DriverOptions) GetBoolOptions() map[string]bool {
	if m != nil {
		return m.BoolOptions
	}
	return nil
}

func (m *DriverOptions) GetStringOptions() map[string]string {
	if m != nil {
		return m.StringOptions
	}
	return nil
}

func (m *DriverOptions) GetIntOptions() map[string]int64 {
	if m != nil {
		return m.IntOptions
	}
	return nil
}

func (m *DriverOptions) GetStringSliceOptions() map[string]*StringSlice {
	if m != nil {
		return m.StringSliceOptions
	}
	return nil
}

type StringSlice struct {
	Value                []string `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringSlice) Reset()         { *m = StringSlice{} }
func (m *StringSlice) String() string { return proto.CompactTextString(m) }
func (*StringSlice) ProtoMessage()    {}
func (*StringSlice) Descriptor() ([]byte, []int) {
	return fileDescriptor_drivers_ac7416dc6971797b, []int{2}
}
func (m *StringSlice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringSlice.Unmarshal(m, b)
}
func (m *StringSlice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringSlice.Marshal(b, m, deterministic)
}
func (dst *StringSlice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringSlice.Merge(dst, src)
}
func (m *StringSlice) XXX_Size() int {
	return xxx_messageInfo_StringSlice.Size(m)
}
func (m *StringSlice) XXX_DiscardUnknown() {
	xxx_messageInfo_StringSlice.DiscardUnknown(m)
}

var xxx_messageInfo_StringSlice proto.InternalMessageInfo

func (m *StringSlice) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

type ClusterInfo struct {
	Version              string            `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
	ServiceAccountToken  string            `protobuf:"bytes,2,opt,name=service_account_token,json=serviceAccountToken" json:"service_account_token,omitempty"`
	Endpoint             string            `protobuf:"bytes,3,opt,name=endpoint" json:"endpoint,omitempty"`
	Username             string            `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	Password             string            `protobuf:"bytes,5,opt,name=password" json:"password,omitempty"`
	RootCaCertificate    string            `protobuf:"bytes,6,opt,name=root_ca_certificate,json=rootCaCertificate" json:"root_ca_certificate,omitempty"`
	ClientCertificate    string            `protobuf:"bytes,7,opt,name=client_certificate,json=clientCertificate" json:"client_certificate,omitempty"`
	ClientKey            string            `protobuf:"bytes,8,opt,name=client_key,json=clientKey" json:"client_key,omitempty"`
	NodeCount            int64             `protobuf:"varint,9,opt,name=node_count,json=nodeCount" json:"node_count,omitempty"`
	Metadata             map[string]string `protobuf:"bytes,10,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Status               string            `protobuf:"bytes,11,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ClusterInfo) Reset()         { *m = ClusterInfo{} }
func (m *ClusterInfo) String() string { return proto.CompactTextString(m) }
func (*ClusterInfo) ProtoMessage()    {}
func (*ClusterInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_drivers_ac7416dc6971797b, []int{3}
}
func (m *ClusterInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterInfo.Unmarshal(m, b)
}
func (m *ClusterInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterInfo.Marshal(b, m, deterministic)
}
func (dst *ClusterInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterInfo.Merge(dst, src)
}
func (m *ClusterInfo) XXX_Size() int {
	return xxx_messageInfo_ClusterInfo.Size(m)
}
func (m *ClusterInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterInfo proto.InternalMessageInfo

func (m *ClusterInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ClusterInfo) GetServiceAccountToken() string {
	if m != nil {
		return m.ServiceAccountToken
	}
	return ""
}

func (m *ClusterInfo) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *ClusterInfo) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ClusterInfo) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ClusterInfo) GetRootCaCertificate() string {
	if m != nil {
		return m.RootCaCertificate
	}
	return ""
}

func (m *ClusterInfo) GetClientCertificate() string {
	if m != nil {
		return m.ClientCertificate
	}
	return ""
}

func (m *ClusterInfo) GetClientKey() string {
	if m != nil {
		return m.ClientKey
	}
	return ""
}

func (m *ClusterInfo) GetNodeCount() int64 {
	if m != nil {
		return m.NodeCount
	}
	return 0
}

func (m *ClusterInfo) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ClusterInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "types.Empty")
	proto.RegisterType((*DriverOptions)(nil), "types.DriverOptions")
	proto.RegisterMapType((map[string]bool)(nil), "types.DriverOptions.BoolOptionsEntry")
	proto.RegisterMapType((map[string]int64)(nil), "types.DriverOptions.IntOptionsEntry")
	proto.RegisterMapType((map[string]string)(nil), "types.DriverOptions.StringOptionsEntry")
	proto.RegisterMapType((map[string]*StringSlice)(nil), "types.DriverOptions.StringSliceOptionsEntry")
	proto.RegisterType((*StringSlice)(nil), "types.StringSlice")
	proto.RegisterType((*ClusterInfo)(nil), "types.ClusterInfo")
	proto.RegisterMapType((map[string]string)(nil), "types.ClusterInfo.MetadataEntry")
}

func init() { proto.RegisterFile("drivers.proto", fileDescriptor_drivers_ac7416dc6971797b) }

var fileDescriptor_drivers_ac7416dc6971797b = []byte{
	// 552 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0xdf, 0x8f, 0xd2, 0x40,
	0x10, 0xc7, 0x8f, 0x2b, 0x14, 0x98, 0x1e, 0x7a, 0xce, 0xa1, 0x36, 0x4d, 0x4c, 0x08, 0x6a, 0xe4,
	0xe1, 0xec, 0x03, 0xfa, 0x60, 0xfc, 0x15, 0x15, 0x49, 0xbc, 0x18, 0x35, 0xe1, 0x7c, 0xf1, 0x45,
	0x52, 0xca, 0x9e, 0xd9, 0x5c, 0xd9, 0x6d, 0x76, 0x17, 0x0c, 0x7f, 0xad, 0xff, 0x80, 0x7f, 0x84,
	0xd9, 0x1f, 0x94, 0xf6, 0x40, 0x2f, 0xbe, 0x75, 0xe6, 0xfb, 0x9d, 0x4f, 0x77, 0x66, 0xa7, 0x85,
	0xce, 0x5c, 0xd0, 0x15, 0x11, 0x32, 0xce, 0x05, 0x57, 0x1c, 0x1b, 0x6a, 0x9d, 0x13, 0xd9, 0x6f,
	0x42, 0x63, 0xbc, 0xc8, 0xd5, 0xba, 0xff, 0xbb, 0x0e, 0x9d, 0xf7, 0xc6, 0xf1, 0x25, 0x57, 0x94,
	0x33, 0x89, 0x1f, 0xe0, 0x68, 0xc6, 0x79, 0x36, 0xe5, 0x36, 0x0e, 0x6b, 0x3d, 0x6f, 0x10, 0x0c,
	0x1f, 0xc6, 0xa6, 0x30, 0xae, 0x78, 0xe3, 0x77, 0x9c, 0x67, 0xee, 0x79, 0xcc, 0x94, 0x58, 0x4f,
	0x82, 0xd9, 0x36, 0x83, 0x9f, 0xe1, 0x86, 0x54, 0x82, 0xb2, 0x1f, 0x05, 0xeb, 0xd0, 0xb0, 0x1e,
	0xed, 0x65, 0x9d, 0x1b, 0x6b, 0x85, 0xd6, 0x91, 0xe5, 0x1c, 0x8e, 0x21, 0xa0, 0x4c, 0x15, 0x30,
	0xcf, 0xc0, 0x1e, 0xec, 0x85, 0x9d, 0x31, 0x55, 0x21, 0x01, 0x2d, 0x12, 0xf8, 0x1d, 0xba, 0xee,
	0x58, 0x32, 0xa3, 0x29, 0x29, 0x78, 0x75, 0xc3, 0x3b, 0xfd, 0xc7, 0xe1, 0xce, 0xb5, 0xbf, 0xc2,
	0x45, 0xb9, 0x23, 0x44, 0xaf, 0xe1, 0xf8, 0xea, 0x5c, 0xf0, 0x18, 0xbc, 0x4b, 0xb2, 0x0e, 0x6b,
	0xbd, 0xda, 0xa0, 0x3d, 0xd1, 0x8f, 0xd8, 0x85, 0xc6, 0x2a, 0xc9, 0x96, 0x24, 0x3c, 0xec, 0xd5,
	0x06, 0xad, 0x89, 0x0d, 0x9e, 0x1f, 0x3e, 0xab, 0x45, 0x6f, 0x00, 0x77, 0x67, 0x71, 0x1d, 0xa1,
	0x5d, 0x26, 0xbc, 0x82, 0x9b, 0x57, 0x06, 0x70, 0x5d, 0xb9, 0x57, 0x2e, 0xff, 0x06, 0x77, 0xff,
	0xd2, 0xef, 0x1e, 0xcc, 0xa0, 0x8c, 0x09, 0x86, 0xe8, 0xc6, 0x57, 0x02, 0x94, 0xd0, 0xfd, 0xfb,
	0x10, 0x94, 0x94, 0xed, 0x19, 0xf4, 0x92, 0x6d, 0x5a, 0xe8, 0xff, 0xf2, 0x20, 0x18, 0x65, 0x4b,
	0xa9, 0x88, 0x38, 0x63, 0x17, 0x1c, 0x43, 0x68, 0xea, 0x0d, 0xa6, 0x9c, 0xb9, 0x17, 0x6f, 0x42,
	0x1c, 0xc2, 0x6d, 0x49, 0xc4, 0x4a, 0xdf, 0x62, 0x92, 0xa6, 0x7c, 0xc9, 0xd4, 0x54, 0xf1, 0x4b,
	0xc2, 0xdc, 0x48, 0x4e, 0x9c, 0xf8, 0xd6, 0x6a, 0x5f, 0xb5, 0x84, 0x11, 0xb4, 0x08, 0x9b, 0xe7,
	0x9c, 0x32, 0x15, 0x7a, 0xc6, 0x56, 0xc4, 0x5a, 0x5b, 0x4a, 0x22, 0x58, 0xb2, 0x20, 0x61, 0xdd,
	0x6a, 0x9b, 0x58, 0x6b, 0x79, 0x22, 0xe5, 0x4f, 0x2e, 0xe6, 0x61, 0xc3, 0x6a, 0x9b, 0x18, 0x63,
	0x38, 0x11, 0x9c, 0xab, 0x69, 0x9a, 0x4c, 0x53, 0x22, 0x14, 0xbd, 0xa0, 0x69, 0xa2, 0x48, 0xe8,
	0x1b, 0xdb, 0x2d, 0x2d, 0x8d, 0x92, 0xd1, 0x56, 0xc0, 0xc7, 0x80, 0x69, 0x46, 0x09, 0x53, 0x15,
	0x7b, 0xd3, 0xda, 0xad, 0x52, 0xb6, 0xdf, 0x03, 0x70, 0x76, 0x3d, 0xfc, 0x96, 0xb1, 0xb5, 0x6d,
	0xe6, 0x23, 0x59, 0x6b, 0x99, 0xf1, 0x39, 0x99, 0x9a, 0x26, 0xc3, 0xb6, 0xb9, 0xce, 0xb6, 0xce,
	0x8c, 0x74, 0x02, 0x5f, 0x42, 0x6b, 0x41, 0x54, 0x32, 0x4f, 0x54, 0x12, 0x82, 0xd9, 0xf1, 0x9e,
	0xbb, 0xa4, 0xd2, 0x90, 0xe3, 0x4f, 0xce, 0x62, 0xf7, 0xba, 0xa8, 0xc0, 0x3b, 0xe0, 0x4b, 0x95,
	0xa8, 0xa5, 0x0c, 0x03, 0xf3, 0x5e, 0x17, 0x45, 0x2f, 0xa0, 0x53, 0x29, 0xf9, 0x9f, 0x05, 0x1d,
	0x66, 0xe0, 0xdb, 0xef, 0x0b, 0x9f, 0x82, 0x3f, 0x12, 0x44, 0x37, 0xd9, 0xdd, 0xf7, 0xe1, 0x45,
	0xb8, 0x7b, 0xd4, 0xfe, 0x01, 0x9e, 0x82, 0x3f, 0x21, 0x0b, 0xbe, 0x22, 0xb8, 0x47, 0x8f, 0x8e,
	0x5c, 0xce, 0xfe, 0xe1, 0x0e, 0x66, 0xbe, 0xf9, 0xf5, 0x3d, 0xf9, 0x13, 0x00, 0x00, 0xff, 0xff,
	0xb8, 0xcc, 0x47, 0x23, 0x0b, 0x05, 0x00, 0x00,
}
